security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    users_in_memory:
      memory:
        users:
          admin:
            {
              password: "$2y$13$Szf/XL.cD2B4bmKsGMX3PehhNVbpEnUgKGOPZCa2wOxAtpVwVwYlm",
              roles: ["ROLE_ADMIN"],
            }
          measurement_admin:
            {
              password: "$2y$13$Szf/XL.cD2B4bmKsGMX3PehhNVbpEnUgKGOPZCa2wOxAtpVwVwYlm",
              roles: ["ROLE_MEASUREMENT"],
            }
          cartographer_admin:
            {
              password: "$2y$13$Szf/XL.cD2B4bmKsGMX3PehhNVbpEnUgKGOPZCa2wOxAtpVwVwYlm",
              roles: ["ROLE_CARTOGRAPHER"],
            }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: users_in_memory
      form_login:
        login_path: app_login
        check_path: app_login
      logout:
        path: app_logout
      # http_basic:
      #   realm: My secured data

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  role_hierarchy:
    ROLE_ADMIN:
      [
        ROLE_MEASUREMENT,
        ROLE_MEASUREMENT_CREATE,
        ROLE_MEASUREMENT_SHOW,
        ROLE_MEASUREMENT_EDIT,
        ROLE_MEASUREMENT_DELETE,
        ROLE_CARTOGRAPHER,
        ROLE_CARTOGRAPHER_CREATE,
        ROLE_CARTOGRAPHER_SHOW,
        ROLE_CARTOGRAPHER_EDIT,
        ROLE_CARTOGRAPHER_DELETE,
      ]
    ROLE_MEASUREMENT:
      [
        ROLE_MEASUREMENT,
        ROLE_MEASUREMENT_CREATE,
        ROLE_MEASUREMENT_SHOW,
        ROLE_MEASUREMENT_EDIT,
        ROLE_MEASUREMENT_DELETE,
      ]
    ROLE_CARTOGRAPHER:
      [
        ROLE_CARTOGRAPHER,
        ROLE_CARTOGRAPHER_CREATE,
        ROLE_CARTOGRAPHER_SHOW,
        ROLE_CARTOGRAPHER_EDIT,
        ROLE_CARTOGRAPHER_DELETE,
      ]
  access_control:
    # - { path: ^/admin, roles: ROLE_ADMINS }
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon